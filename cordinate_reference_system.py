# -*- coding: utf-8 -*-
"""Cordinate_Reference_System.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1j4Ft5iSaUSxEoN6quneCrOtkx0WtajQ1
"""

import geopandas as gpd
import pandas as pd

regions = gpd.read_file("Map_of_Regions_in_Ghana.shp.zip")

regions.head()

print(region.crs)

"""**SETTING THE CRS**"""

# Create a DataFrame with health facilities in Ghana
facilities_df = pd.read_csv("health_facilities.csv")
#facilities.head()
# Convert the DataFrame to a GeoDataFrame
facilities = gpd.GeoDataFrame(facilities_df, geometry=gpd.points_from_xy(facilities_df.Longitude, facilities_df.Latitude))

# Set the cordinate reference system (CRS) to EPSG 4326
facilities.crs = "EPSG:4326"

# View the first five rows of the GeoDataFrame
facilities.head()

"""**Re-Projecting**"""

# Create a map
ax = regions.plot(figsize=(8,8), color='whitesmoke', linestyle=':', edgecolor='black')
facilities.to_crs(epsg=32630).plot(markersize=1, ax=ax)

# The to_crs() method modifies only the "geometry" column: all other columns are left as-is
# The latitude and Longitude columns are unchanged
facilities.to_crs(epsg=32630).head()

# When EPGS code is not available
regions.to_crs("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs").head()

"""**ATTRIBUTE OF GEOMETRIC OBJECTS**"""

# Get the X-cordinates of each point
facilities.geometry.head().x

facilities.geometry.head().length

facilities.geometry.head().area

# Calculate the areas(in square meters) of each polygon in the GeoDataFrame
regions.loc[:, "AREA"] = regions.geometry.area  /  10**6

print("Area of Ghana: {} square kilometers".format(regions.AREA.sum()))

print("crs:", regions.crs)

regions.head()

"""**The one that contains the geometry is used for plot the boundaries(ax = ...)**

**While the GeoDataFrame(with latitude and longitude) is used for main plotting**
"""


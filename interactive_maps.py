# -*- coding: utf-8 -*-
"""Interactive_maps.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ofv9D5GgCjF7ZUDPHxox1n_KdUVpEwN1
"""

!pip install --upgrade folium

import folium.plugins
dir(folium.plugins)

import folium
from folium import Choropleth, Circle, Marker
from folium.plugins import HeatMap, MarkerCluster

import pandas as pd
import geopandas as gpd
import math

# Create a map
m_1 = folium.Map(location=[42.32, -71.0589], title='openstreetmap', zoom_start=10)

# Display the map
m_1

"""The Data"""

# Load the data
crimes = pd.read_csv("/content/crime_boston.csv", encoding='latin-1')

# Drop rows with missing locations
crimes.dropna(subset=['Lat', 'Long', 'DISTRICT'], inplace=True)

# Focus on major crimes in 2018
crimes = crimes[crimes.OFFENSE_CODE_GROUP.isin([
    'Larceny', 'Auto Theft', 'Robbery', 'Larceny From Motor Vehicle', 'Residential Burglary',
    'Simple Assault', 'Harassment', 'Ballistics', 'Aggravated Assault', 'Other Burglary',
    'Arson', 'Commercial Burglary', 'HOME INVASION', 'Homicide', 'Criminal Harassment',
    'Manslaughter'
])]

crimes = crimes[crimes.YEAR>= 2018]

# Print the first five rows of the table
crimes.head()

"""**Plotting points**"""

daytime_robberies = crimes[((crimes.OFFENSE_CODE_GROUP == 'Robbery') & \
                            (crimes.HOUR.isin(range(9, 18))))]

"""**Folium marker**

We add marker to the map
"""

# Create a map
m_2 = folium.Map(location=[42.32, -71.0589], title='cartodbposition', zoom_start=13)

# Add points to the map
for idx, row in daytime_robberies.iterrows():
  Marker([row['Lat'], row['Long']]).add_to(m_2)

# Display the map
m_2

"""folium.plugins.MarkerCluster

when we have a lot of markers
"""

# Create the map
m_3 = folium.Map(location=[42.32, -71.0589], tiles='cartodbpositron', zoom_start=13)

# Add points to the map
mc = MarkerCluster()
for idx, row in daytime_robberies.iterrows():
  if not math.isnan(row['Long']) and not math.isnan(row['Lat']):
    mc.add_child(Marker([row['Lat'], row['Long']]))

m_3.add_child(mc)

"""**Bubble Maps**

A bubble map uses circle instead of markers
"""

# Create a base map
m_4 = folium.Map(location=[42.32, -71.0589], tiles='cartodbpositron', zoom_start=13)


def color_producer(val):
  if val <= 12:
    return 'forestgreen'
  else:
    return 'darkred'

# Add a bubble map to the base map
for i in range(0, len(daytime_robberies)):
  Circle(
      location=[daytime_robberies.iloc[i]['Lat'], daytime_robberies.iloc[i]['Long']],
      radius=20,
      color=color_producer(daytime_robberies.iloc[i]['HOUR'])).add_to(m_4)

# Display the map
m_4

"""** Heatmap**

Using folium.plugins.heat_maps
"""

# Create a base map
m_5 = folium.Map(location=[42.32, -71.0598], tiles='cartodbpositron', zoom_start=12)

# Add a heatmap to the base map
HeatMap(data=crimes[['Lat', 'Long']], radius=10).add_to(m_5)

# Display the map
m_5

"""**Choropleth maps**

To understand how crime varies by police district.
"""

# GeoDataFrame with geogrphical boundaries of Boston police districts
districts_full = gpd.read_file("/content/Police_District.zip")
districts = districts_full[['DISTRICT', 'geometry']].set_index("DISTRICT")
districts.head()

# To create a pandas series called plot_dict
plot_dict = crimes.DISTRICT.value_counts()
plot_dict.head()

"""In the code above, we convert the districts GeoDataFrame to a GeoJSON FeatureCollection with the __geo_interface__ attribute."""

# Create a base map
m_6 = folium.Map(location=[42.32, -71.0589], tiles='cartodbpositron', zoom_start=12)

# Add a choropleth map to the base map
Choropleth(geo_data=districts.__geo_interface__,
           data=plot_dict,
           key_on='feature.id',
          fill_color='YlGnBu',
           legend_name='Major criminal incidents (Jan Aug 2018)'
           ).add_to(m_6)

# Display the map
m_6

